version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - microservice_network

  # Zookeeper Service
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - microservice_network

  # Kafka Service
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.18.0.18:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - microservice_network

  # API Gateway Service
  api_gateway:
    build:
      context: ./api_gateway
    container_name: api_gateway
    environment:
      - USER_SERVICE_V1=http://192.18.0.18:5001
      - USER_SERVICE_V2=http://192.18.0.18:5002
    depends_on:
      - user_microservice_v1
      - user_microservice_v2
    ports:
      - "5000:5000"
    volumes:
      - ./api_gateway/config.json:/app/config.json
    networks:
      - microservice_network

  # User Microservice V1
  user_microservice_v1:
    build:
      context: ./user_microservice
    container_name: user_microservice_v1
    environment:
      - MONGO_URI=mongodb://192.18.0.18:27017
      - KAFKA_BOOTSTRAP_SERVERS=192.18.0.18:9092
    depends_on:
      - mongodb
      - kafka
    ports:
      - "5001:5001"
    networks:
      - microservice_network

  # User Microservice V2
  user_microservice_v2:
    build:
      context: ./user_microservice_v2
    container_name: user_microservice_v2
    environment:
      - MONGO_URI=mongodb://192.18.0.18:27017
      - KAFKA_BOOTSTRAP_SERVERS=192.18.0.18:9092
    depends_on:
      - mongodb
      - kafka
    ports:
      - "5002:5002"
    networks:
      - microservice_network

  # Order Microservice
  order_microservice:
    build:
      context: ./order_microservice
    container_name: order_microservice
    environment:
      - MONGO_URI=mongodb://192.18.0.18:27017
    depends_on:
      - mongodb
    ports:
      - "5003:5003"
    networks:
      - microservice_network

  # Event System
  event_systeem:
    build:
      context: ./event_systeem
    container_name: event_systeem
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=192.18.0.18:9092
    depends_on:
      - kafka
      - mongodb
    networks:
      - microservice_network

volumes:
  mongo-data:

networks:
  microservice_network:
    driver: bridge
